# Nombre del action
name: Tests automáticos

# En qué eventos y ramas se activa
on:
  push:
    branches: [ "main" ]

# Tareas
jobs:
  test: # Tarea "build"
    permissions: write-all # Tiene permiso para escribir
    runs-on: ubuntu-latest # Sistema operativo en el que se ejecuta el action

    steps: # Pasos
      - uses: actions/checkout@v4 # Hace un checkout del código
      # Configura Java
      - name: Set up JDK 17
        uses: actions/setup-java@v4 # Acción que configura el JDK
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Verifica con Maven
        run: mvn --batch-mode --update-snapshots verify --file pom.xml # Comando para testear el código con maven

      # Genera un informe
      - name: Report
        uses: dorny/test-reporter@v1 # Acción que genera el informe
        if: always() # Ejecutar siempre, aunque lo anterior falle.
        with:
          name: Informe de tests
          path: target/surefire-reports/*.xml # Ruta para guardar los informes
          reporter: java-junit
          fail-on-error: true # Si hay error marcar como tarea fallida.
Haz commit. Si accedes a la pestaña "Actions" podrás comprobar que se ha ejecutado el script, así como su resultado.

Haz push y comprueba que se ejecuta la acción.

A continuación vamos a añadir otra tarea a la acción para que, si pasan los tests, se genere el archivo.jar para los usuarios de nuestra calculadora.

Modificaremos el pom.xml para indicar el ID de grupo y de artefacto (debe ir todo en minúsculas), así como indicar un número de versión:

    <groupId>dam.ed</groupId>
    <artifactId>calculadora</artifactId>
    <version>1.1</version>
